{"version":3,"sources":["components/Button.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["Button","_ref","symbol","color","handleClick","react_default","a","createElement","onClick","className","style","backgroundColor","Input","text","result","App","_useState","useState","_useState2","Object","slicedToArray","setText","_useState3","_useState4","setResult","addToText","val","concat","toConsumableArray","src_components_Input","src_components_Button","input","join","math","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c9690214.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css';\n\nconst Button = ({symbol, color, handleClick}) => {\n    return (\n    <div \n        onClick={() => handleClick(symbol)}\n        className=\"button-wrapper\" \n        style={{backgroundColor : color}}>\n        {symbol}\n    </div>\n    )\n};\n\nexport default Button;","import React from \"react\";\nimport \"./Input.css\";\n\nconst Input = ({text, result}) => {\n    return (\n        <div className='input-wrapper'>\n            <div className=\"result\">\n                <h1>{result}</h1>\n            </div>\n            <div className=\"text\">\n                <h3>{text}</h3>\n            </div>\n        </div>\n     );\n};\n\nexport default Input;","import React,{useState} from \"react\";\nimport './App.css';\nimport Button from './components/Button';\nimport Input from './components/Input';\nimport * as math from \"mathjs\";\n\nconst App = () => {\n\n  const [text, setText] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n \n  const addToText = (val) => {\n    setText((text) => [...text, val + \"\"]);\n  }\n\n  const resetInput = () => {\n    setText(\"\");\n    setResult(\"\");\n  }\n\n  const calculateResult = () => {\n    const input = text.join(\"\"); //remove commas\n    setResult(math.evaluate(input));\n  }\n\n  const buttonColor = \"#f2a33c\";\n\n  return (\n    <div className=\"App\">\n        <div className=\"calc-wrapper\">\n          <Input text={text} result={result}/>\n          <div className='row'> \n            <Button symbol=\"7\" handleClick={addToText} />\n            <Button symbol=\"8\" handleClick={addToText} />\n            <Button symbol=\"9\" handleClick={addToText} />\n            <Button symbol=\"/\" color={buttonColor} handleClick={addToText} />\n          </div>\n          <div className='row'> \n            <Button symbol=\"4\" handleClick={addToText} />\n            <Button symbol=\"5\"handleClick={addToText} />\n            <Button symbol=\"6\" handleClick={addToText} />\n            <Button symbol=\"*\" color={buttonColor} handleClick={addToText} />\n          </div>\n          <div className='row'> \n            <Button symbol=\"1\" handleClick={addToText} />\n            <Button symbol=\"2\" handleClick={addToText} />\n            <Button symbol=\"3\" handleClick={addToText} />\n            <Button symbol=\"+\" color={buttonColor} handleClick={addToText} />\n          </div>\n          <div className='row'> \n            <Button symbol=\"0\" handleClick={addToText} />\n            <Button symbol=\".\" handleClick={addToText} />\n            <Button symbol=\"=\" handleClick={calculateResult}/>\n            <Button symbol=\"-\" color={buttonColor} handleClick={addToText}/>\n          </div>\n          <Button symbol=\"Clear\" color=\"red\" handleClick={resetInput}/>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}